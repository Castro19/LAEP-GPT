name: Build and deploy Node.js app to Azure Web App - PolyLink

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    name: Install and Build

    steps:
      # Step 1: Checkout the code
      - uses: actions/checkout@v4

      # Step 2: Set up Node.js
      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"
          cache: "npm"

      # Step 3: Install dependencies at the root (for all workspaces: shared + server)
      - name: Install All Dependencies (Workspace)
        run: |
          npm ci
          # Debug info for dependencies
          npm list @langchain/langgraph --depth=0 || true
          npm list @langchain/core --depth=0 || true

      # Step 4: Build Shared + Server
      - name: Build Shared
        run: npm run build:shared

      - name: Build Server
        run: npm run build:server

      # Step 5: Prepare server for deployment
      - name: Prepare Server for Deployment
        run: |
          # 1. Production-only, workspace-aware install that copies real files
          npm ci --omit=dev \
                --workspace=server \
                --include-workspace-root \
                --install-links=false      # materialise packages instead of symlinks

          # 2. Quick sanity check
          test -f server/node_modules/@langchain/langgraph/prebuilt/index.js && \
            echo "✅ prebuilt sub-path present" || \
            (echo "❌ prebuilt sub-path missing!" && exit 1)

      # Step 6: Create final deployment artifact
      - name: Create zip artifact
        run: |
          cd server
          # Include package-lock.json in the deployment
          zip -r release.zip dist node_modules package.json package-lock.json .npmrc

      # Step 7: Show ZIP contents (for debugging)
      - name: Show ZIP contents
        run: |
          cd server
          zipinfo release.zip

      # Step 8: Upload Artifact
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: server-app
          path: server/release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: "Production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: server-app

      - name: Unzip artifact for deployment
        run: |
          mkdir server-build
          cd server-build
          unzip ../release.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_F274D06961214893BCE0EE8D715C228C }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_6525025D5E644854A55E3DBAB0DA6BA0 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_4FD34D38472142FAAB00A39151A44589 }}

      - name: "Deploy to Azure Web App"
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: "PolyLink"
          slot-name: "Production"
          package: ./server-build
