name: Build and deploy Node.js app to Azure Web App - PolyLink

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    name: Install and Build

    steps:
      # Step 1: Checkout the code
      - uses: actions/checkout@v4

      # Step 2: Set up Node.js
      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      # Step 3: Install dependencies (root)
      - name: Install All Dependencies (Workspace)
        run: |
          npm install
          # Just to check what's hoisted:
          npm list openai --depth=0 || true

      # Step 4: Build Shared
      - name: Build Shared
        run: |
          npm run build:shared

      # Step 5: Build Server
      - name: Build Server
        run: |
          npm run build:server
          # Confirm the server's package has the correct openai version:
          cd server
          npm list openai --depth=0 || true

      # Step 6: Create a production-ready server package with only needed dependencies
      - name: Prepare Server Package
        run: |
          # Create deploy directory
          mkdir -p deploy-package/node_modules

          # Copy compiled code and package.json
          cp -r server/dist deploy-package/
          cp server/package.json deploy-package/

          # Extract only production dependencies from package.json
          echo "Extracting production dependencies..."
          PROD_DEPS=$(node -e "const pkg = require('./server/package.json'); console.log(Object.keys(pkg.dependencies || {}).join(' '));")
          echo "Production dependencies: $PROD_DEPS"

          # If openai is not in the list, add it explicitly
          if [[ ! "$PROD_DEPS" =~ "openai" ]]; then
            PROD_DEPS="$PROD_DEPS openai@^4.91.0"
            echo "Added openai dependency. Updated list: $PROD_DEPS"
          fi

          # Install only those specific packages
          cd deploy-package
          echo "Installing only production dependencies..."
          if [ ! -z "$PROD_DEPS" ]; then
            npm install --no-save $PROD_DEPS
          else
            echo "No production dependencies found in package.json"
          fi

          # Verify openai is correctly installed
          echo "Checking for openai package:"
          find node_modules -name "openai" -type d | grep -v "node_modules/.*node_modules" || echo "No openai directory found"
          npm list openai --depth=0 || true

      # Step 7: Create zip artifact
      - name: Create zip artifact
        run: |
          cd deploy-package
          zip -r release.zip dist package.json node_modules

      # Step 8: Show ZIP contents (for debugging)
      - name: Show ZIP contents
        run: |
          cd deploy-package
          echo "Top-level directories in zip:"
          zipinfo -1 release.zip | grep -v "/" | sort

          echo "openai module files in zip:"
          zipinfo -1 release.zip | grep -E "node_modules/openai|node_modules/@openai" | head -10 || echo "No openai package found in zip!"

          echo "Number of files in zip:" $(zipinfo -1 release.zip | wc -l)

      # Step 9: Upload Artifact
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: server-app
          path: deploy-package/release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: "Production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write # required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: server-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_F274D06961214893BCE0EE8D715C228C }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_6525025D5E644854A55E3DBAB0DA6BA0 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_4FD34D38472142FAAB00A39151A44589 }}

      # Add this environment variable to tell Azure NOT to run npm install
      - name: Set deployment settings
        uses: azure/appservice-settings@v1
        with:
          app-name: "PolyLink"
          app-settings-json: '[{"name": "SCM_DO_BUILD_DURING_DEPLOYMENT", "value": "false"}]'

      - name: "Deploy to Azure Web App"
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: "PolyLink"
          slot-name: "Production"
          package: .
