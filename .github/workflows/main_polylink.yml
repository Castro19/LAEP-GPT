# .github/workflows/azure-deploy.yml
# • Builds on every push / PR
# • Deploys only on push to main
# • Uses hoisted node_modules (Strategy A)

name: Build & deploy Node.js app to Azure Web App – PolyLink

on:
  push:
    branches: [main] # build + deploy
  pull_request:
    branches: [main] # build-only

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1 ▸ checkout + toolchain
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v3
        with:
          node-version: "20.x"
          cache: npm

      # 2 ▸ workspace install + build
      - name: Install all workspaces
        run: npm ci

      - name: Build shared + server
        run: |
          npm run build:shared
          npm run build:server

      # 3 ▸ prune dev-deps (keep hoisted tree)
      - name: Prune to production dependencies
        run: |
          npm prune --omit=dev     # modifies the *root* node_modules tree

          echo ""
          echo "📦 Top-level packages in root node_modules (after prune):"
          ls -1 node_modules | head -n 40
          echo "… (total $(ls -1 node_modules | wc -l))"

          echo ""
          echo "🔍 Smoke-test for langgraph prebuilt file:"
          test -f node_modules/@langchain/langgraph/prebuilt.js \
            && echo "✅ prebuilt.js present" \
            || { echo "❌ prebuilt.js missing"; exit 1; }

      # 4 ▸ package artifact (server + root node_modules)
      - name: Zip server artifact
        run: |
          zip -r server.zip \
            server/dist server/package.json server/package-lock.json server/.npmrc 2>/dev/null || true \
            node_modules

      - uses: actions/upload-artifact@v4
        with:
          name: server-app
          path: server.zip

  deploy:
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: server-app

      - uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_F274D06961214893BCE0EE8D715C228C }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_6525025D5E644854A55E3DBAB0DA6BA0 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_4FD34D38472142FAAB00A39151A44589 }}

      - uses: azure/webapps-deploy@v3
        with:
          app-name: "PolyLink"
          slot-name: "Production"
          package: server.zip
