name: Continuous Integration

on: [push, pull_request]

jobs:
  client-build-and-lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install Client Dependencies
        run: |
          cd Client
          npm install
        env:
          VITE_SENTRY_AUTH_TOKEN: ${{ secrets.VITE_SENTRY_AUTH_TOKEN }}
          VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
          VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}
          VITE_SERVER_URL: ${{ secrets.VITE_SERVER_URL }}

      - name: Run lint
        run: cd Client && npm run lint

      - name: Build Client
        run: cd Client && npm run build
        env:
          VITE_SENTRY_AUTH_TOKEN: ${{ secrets.VITE_SENTRY_AUTH_TOKEN }}
          VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
          VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}
          VITE_SERVER_URL: ${{ secrets.VITE_SERVER_URL }}
      # Add this step to cache the build
      - name: Cache build artifacts
        uses: actions/cache@v3
        with:
          path: Client/dist
          key: ${{ runner.os }}-client-build-${{ github.sha }}

  server-setup:
    needs: client-build-and-lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      # Restore client build cache
      - name: Restore build artifacts
        uses: actions/cache@v3
        with:
          path: Client/dist
          key: ${{ runner.os }}-client-build-${{ github.sha }}

      - name: Install Server Dependencies
        run: cd server && npm install --ignore-scripts # Added --ignore-scripts flag

      - name: Run lint
        run: cd server && npm run lint

    # Placeholder for future server-side testing
    # - name: Run Server Tests
    #   run: cd server && npm test
